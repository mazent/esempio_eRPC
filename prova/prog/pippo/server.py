#
# Generated by erpcgen 1.8.0 on Thu Jan 21 10:20:53 2021.
#
# AUTOGENERATED - DO NOT EDIT
#

import erpc
from . import common, interface

# Client for pluto
class plutoService(erpc.server.Service):
    def __init__(self, handler):
        super(plutoService, self).__init__(interface.Ipluto.SERVICE_ID)
        self._handler = handler
        self._methods = {
                interface.Ipluto.SCRIVI_ID: self._handle_scrivi,
                interface.Ipluto.LEGGI_ID: self._handle_leggi,
            }

    def _handle_scrivi(self, sequence, codec):
        # Read incoming parameters.
        val = codec.read_uint32()

        # Invoke user implementation of remote function.
        _result = self._handler.scrivi(val)

        # Prepare codec for reply message.
        codec.reset()

        # Construct reply message.
        codec.start_write_message(erpc.codec.MessageInfo(
            type=erpc.codec.MessageType.kReplyMessage,
            service=interface.Ipluto.SERVICE_ID,
            request=interface.Ipluto.SCRIVI_ID,
            sequence=sequence))
        codec.write_bool(_result)

    def _handle_leggi(self, sequence, codec):
        # Read incoming parameters.

        # Invoke user implementation of remote function.
        _result = self._handler.leggi()

        # Prepare codec for reply message.
        codec.reset()

        # Construct reply message.
        codec.start_write_message(erpc.codec.MessageInfo(
            type=erpc.codec.MessageType.kReplyMessage,
            service=interface.Ipluto.SERVICE_ID,
            request=interface.Ipluto.LEGGI_ID,
            sequence=sequence))
        codec.write_uint32(_result)


