#
# Generated by erpcgen 1.8.0 on Thu Jan 21 10:20:53 2021.
#
# AUTOGENERATED - DO NOT EDIT
#

import erpc
from . import common, interface

# Client for pluto
class plutoClient(interface.Ipluto):
    def __init__(self, manager):
        super(plutoClient, self).__init__()
        self._clientManager = manager

    def scrivi(self, val):
        # Build remote function invocation message.
        request = self._clientManager.create_request()
        codec = request.codec
        codec.start_write_message(erpc.codec.MessageInfo(
                type=erpc.codec.MessageType.kInvocationMessage,
                service=self.SERVICE_ID,
                request=self.SCRIVI_ID,
                sequence=request.sequence))
        if val is None:
            raise ValueError("val is None")
        codec.write_uint32(val)

        # Send request and process reply.
        self._clientManager.perform_request(request)
        _result = codec.read_bool()
        return _result

    def leggi(self):
        # Build remote function invocation message.
        request = self._clientManager.create_request()
        codec = request.codec
        codec.start_write_message(erpc.codec.MessageInfo(
                type=erpc.codec.MessageType.kInvocationMessage,
                service=self.SERVICE_ID,
                request=self.LEGGI_ID,
                sequence=request.sequence))

        # Send request and process reply.
        self._clientManager.perform_request(request)
        _result = codec.read_uint32()
        return _result



